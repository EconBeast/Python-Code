"""To maintain var lists.

Just control+F to find the list. Below is a list of the names to search.

"""
list_of_var_lists = [
                        # for x_create_base_df
                        "variables_to_keep_weimar_dig_analyse",
                        "final_variable_collection",
                        "clean_base_map",
                        
                        # digitization_mapped
                        "weimar_dig_process",
                        "nazi_dig_process",
                        
                        # persecution_mapped
                        "variables_to_keep_persecution_process",
                        "persecution_agg_rules",
                        
                        # radio_mapped
                        "variables_to_keep_radio_process",
                        
                        # clean_digitization
                        "dig_gemeinde_dict",
                        
                        ]

def weimar_variables():
    variables_to_keep_weimar_dig_analyse = [
                                            "NEAR_DIST",
                                            "dist_berlin",
                                            "exposure_prussia",
                                            "inc_random",
                                            "inc_year",
                                            "lat",
                                            "lon",
                                            "prussia_ind",
                                            "segment_identifier",
                                            "segment_identifier_alt1",
                                            "segment_identifier_alt2",
                                            "map_kreis_merge",
                                            
                                            "beamte_1910",
                                            "pop_residential_june_1933",
                                            "property_taxes_weimar_pc",
                                            "business_tax_weimar_pc",
                                            "wealth_transfer_tax_weimar_pc",
                                            "local_tax_weimar_pc",
                                            "property_taxes_weimar_nominal",
                                            "business_tax",
                                            "wealth_transfer_tax_nominal_weimar",
                                            "tot_local_tax_weimar_nominal",
                                            "tot_qualified_to_pay_taxes", 
                                            "tot_female_tax_payers", 
                                            "tot_taxed",
                                            "tot_tax_exempt", 
                                            "tot_untaxed", 
                                            "percent_tot_taxed",
                                            "percent_tot_tax_exempt", 
                                            "percent_tot_untaxed",
                                            'taxable_income_thousands_weimar',
                                            'taxable_income_thousands_weimar_pc',
                                            'income_taxes_collected_thousands_weimar',
                                            'income_taxes_collected_thousands_weimar_pc',
                                            'exp_unemployment_1000RM',
                                            'exp_museums_arts_1000RM',
                                            'exp_teacher_trainings_1000RM',
                                            'exp_libraries_pc',
                                            'exp_trade_schols_pc',
                                            'exp_primary_education_pc',
                                            'exp_theatre_concerts_pc',
                                            'exp_museums_arts_pc',
                                            'exp_associations_1000RM',
                                            'exp_secondary_education_pc',
                                            'exp_youth_wellbeing_pc',
                                            'exp_post_secondary_education_pc',
                                            'exp_associations_pc',
                                            'exp_libraries_1000RM',
                                            'exp_post_secondary_education_1000RM',
                                            'exp_unemployment_pc',
                                            'exp_teacher_trainings_pc',
                                            'exp_secondary_education_1000RM',
                                            'exp_welfare_including_youth_pc',
                                            'exp_theatre_concerts_1000RM',
                                            'tot_exp_police_pc',
                                            'exp_health_pc',
                                            'exp_welfare_pc',
                                            'General_admin_exp_pc',
                                            'infrastructure_exp_pc',
                                            'Education_exp_pc',
                                            'Land_management_other_exp_pc',
                                            
                                            'nominal_general_admin_exp',
                                            'nominal_infra_exp',
                                            'exp_healthcare_1000RM',
                                            'exp_welfare_1000RM',
                                            'tot_exp_general_tax_finance_ market ',
                                            'tot_exp_police',
                                            'Education_nominal',
                                            
                                            'Police_admin_pc',
                                            'School_admin_pc', 
                                            'other_education_officials_pc', 
                                            "civil_engineering_man_pc",
                                            "fleet_management_pc",
                                            "park_garden_man_pc",
                                            "fire_management_pc",
                                            'Health_care_workers_pc',
                                            'tax_financial_admin_pc', 
                                            'all_gemeinde_admin_pc',
                                            'Police_admin',
                                            'School_admin', 
                                            'other_education_officials', 
                                            'civil_engineering_man',
                                            "fleet_management",
                                            "park_garden_man",
                                            "fire_management",                                        
                                            'Health_care_workers',
                                            'tax_financial_admin', 
                                            'all_gemeinde_admin',
                                            'tot_employees_building_construction_management_pc',
                                            'tot_empl_sewage_pc',
                                            'tot_empl_fleet_and_road_cleaning_pc', 
                                            'tot_empl_garden_park_management_pc',
                                            'tot_empl_fire_dep_pc', 
                                            'tot_empl_healthcare_pc', 
                                            'tot_empl_welfare_system_pc',
                                            'tot_empl_edu_system_pc', 
                                            'tot_empl_police_tax_financial_pc', 
                                            'tot_empl_pc',
                                            
                                            'tot_employees_building_construction_management',
                                            'tot_empl_sewage',
                                            'tot_empl_fleet_and_road_cleaning', 
                                            'tot_empl_garden_park_management',
                                            'tot_empl_fire_dep', 
                                            'tot_empl_healthcare', 
                                            'tot_empl_welfare_system',
                                            'tot_empl_edu_system', 
                                            'tot_empl_police_tax_financial', 
                                            'tot_empl',
                                            
                                            
                                            'Lifetime_Beamte_a',
                                            'Part_time_Beamte_a',
                                            'scientific_beamte_a',
                                            'trainee_beamte_a',
                                            'Fireable_Beamte_a',
                                            'angestellte_pension_a',
                                            'angestellte_Nopension_a',
                                            'Total_beamte_a',
                                            'tot_empl_a',
                                            
                                            'Lifetime_Beamte_b',
                                            'Part_time_Beamte_b',
                                            'scientific_beamte_b',
                                            'trainee_beamte_b',
                                            'Fireable_Beamte_b',
                                            'angestellte_pension_b',
                                            'angestellte_Nopension_b',
                                            'Total_beamte_b',
                                            'tot_empl_b',
                                                                                
                                            'Lifetime_Beamte_pc_a',
                                            'Part_time_Beamte_pc_a',
                                            'scientific_beamte_pc_a',
                                            'trainee_beamte_pc_a',
                                            'Fireable_Beamte_pc_a',
                                            'angestellte_pension_pc_a',
                                            'angestellte_Nopension_pc_a',
                                            'Total_beamte_pc_a',
                                            'tot_empl_pc_a',
                                            
                                            'Lifetime_Beamte_pc_b',
                                            'Part_time_Beamte_pc_b',
                                            'scientific_beamte_pc_b',
                                            'trainee_beamte_pc_b',
                                            'Fireable_Beamte_pc_b',
                                            'angestellte_pension_pc_b',
                                            'angestellte_Nopension_pc_b',
                                            'Total_beamte_pc_b',
                                            'tot_empl_pc_b',
                                            
                                            'welfare_empl_nom',
                                            'welfare_empl_pc',
                                            
                                            'General_management',
                                            'General_management_pc',
                                            'tot_localdeaths_1year',
                                            'local_deaths_1yearp100',
                                            'tot_nonlocaldeaths_1year',
                                            'nonlocal_deaths_1yearp100',
                                            'tot_deaths_local',
                                            'tot_deaths_foreign',
                                            'tot_births_residents', 
                                            'tot_births_nonlocal',
                                            "tot_immigrants",
                                            "tot_emigrants",
                                            "net_migration",
                                            "value_added_tax_1000RM",
                                            "population1930",
                                            "pop25",
                                            "pop33"
                                            ]
    return variables_to_keep_weimar_dig_analyse
    

def nazi_variables():
    final_variable_collection = [
                                    "NEAR_DIST",
                                    "dist_berlin",
                                    "exposure_prussia",
                                    "inc_random",
                                    "inc_year",
                                    "lat",
                                    "lon",
                                    "prussia_ind",
                                    "segment_identifier",
                                    "segment_identifier_alt1",
                                    "segment_identifier_alt2",
                                    "map_kreis_merge",
                                    "income_tax_per_capita",
                                    "property_tax_per_capita",
                                    "total_tax_per_capita",
                                    "antisemitic_culture_proxy",
                                    "deportations_per_jewish_inhabitant",
                                    "deportations_per_jewish_inhabitant39",
                                    "nazi_share_28",
                                    "nazi_share_30",
                                    "nazi_share_32",
                                    "nazi_share_33",
                                    "share_prot25",
                                    "pog20s",
                                    "syn33",
                                    "jews33",
                                    "pog33",
                                    "logdeport",
                                    "deptotal",
                                    "change_jewish_inhabitants_33_39",
                                    "change_jewish_inhabitants_25_33",
                                    "change_jewish_inhabitants_25_39",
                                    "clubs_per_capita",
                                    "share_listeners31",
                                    "segment_identifier_alt1",
                                    "segment_identifier_alt2",
                                    "c25kath_share",
                                    "c25juden_share",
                                    "lis_share32",
                                    "lis_share33",
                                    "stuer1",
                                    "stuer2",
                                    "stuer3",
                                    "pop33",
                                    "ss32",
                                    "ss33",
                                    "logtaxprop",
                                    "prot_share",
                                   # "c33erlos_share_x",
                                   "war_per1000",
                                   "clubs_nonCivic_pc",
                                   "clubs_civic_pc",
                                   "taxable_income_thousands",
                                   "tot_income_tax_thousands",
                                   "tot_income_tax_pt",
                                   "income_tax_pc",
                                   "local_tax_pc",
                                   "land_and_building_tax", 
                                   "business_tax",
                                   "wealth_transfer_tax",
                                   "land_and_building_taxes_nominal", 
                                   "business_tax_nominal",
                                   "wealth_transfer_tax_nominal",
                                   "local_tax_tot_nominal",
                                   'taxable_income_thousands_nazi',
                                   'taxable_income_nazi_pt', 
                                   'taxable_income_nazi_pc',
                                   'income_taxes_collected_thousands_nazi',
                                   'income_taxes_collected_nazi_pt', 
                                   'income_taxes_collected_pc',
                                   'elementary_exp_pc', 
                                   'secondary_exp_pc',
                                   'gen_man_tax_finance_exp_pc', 
                                   'police_exp_pc', 
                                   'school_admin_exp_pc',
                                   'infrastructure_exp_pc', 
                                   'welfare_exp_pc', 
                                   'health_exp_pc',
                                   'pop_residential_jan_1937',
                                   'Beamte37',
                                   'tot_empl37',
                                   'tot_immigrants36', 
                                   'tot_imm36_p1000', 
                                   'tot_emigrants36',
                                   'tot_emi36_p1000', 
                                   'net_migration36', 
                                   'net_migration36p1000',
                                   'net_migration35p1000', 
                                   'net_migration34p1000', 
                                   'moves_within36',
                                   'moves_within36p1000'
                                   ]
    return final_variable_collection

def weimar_initial_vars():
    weimar_dig_process = [
                            "beamte_1910",
                            "pop_residential_june_1933",
                            "tot_empl",
                            
                            "property_taxes_weimar_nominal",
                            "business_tax",
                            "wealth_transfer_tax_nominal_weimar",
                            "tot_local_tax_weimar_nominal",
                            "tot_qualified_to_pay_taxes", 
                            "tot_female_tax_payers", 
                            "tot_taxed",
                            "tot_tax_exempt", 
                            "tot_untaxed", 
                            "percent_tot_taxed",
                            "percent_tot_tax_exempt", 
                            "percent_tot_untaxed",
                            'taxable_income_thousands_weimar',
                            'taxable_income_thousands_weimar_pc',
                            'income_taxes_collected_thousands_weimar',
                            'income_taxes_collected_thousands_weimar_pc',
                            'exp_unemployment_1000RM',
                            'exp_museums_arts_1000RM',
                            'exp_teacher_trainings_1000RM',
                            'exp_libraries_pc',
                            'exp_trade_schols_pc',
                            'exp_primary_education_pc',
                            'exp_theatre_concerts_pc',
                            'exp_museums_arts_pc',
                            'exp_associations_1000RM',
                            'exp_secondary_education_pc',
                            'exp_youth_wellbeing_pc',
                            'exp_post_secondary_education_pc',
                            'exp_associations_pc',
                            'exp_libraries_1000RM',
                            'exp_post_secondary_education_1000RM',
                            'exp_unemployment_pc',
                            'exp_teacher_trainings_pc',
                            'exp_secondary_education_1000RM',
                            'exp_welfare_including_youth_pc',
                            'exp_theatre_concerts_1000RM',
                            'tot_exp_police_pc',
                            'exp_health_pc',
                            'exp_welfare_pc',
                            
                            'nominal_general_admin_exp',
                            'nominal_infra_exp',
                            'exp_healthcare_1000RM',
                            'exp_welfare_1000RM',
                            'tot_exp_general_tax_finance_ market ',
                            'tot_exp_police',
                            'Education_nominal',
                            
                            
                            
                            'General_admin_exp_pc',
                            'infrastructure_exp_pc',
                            'Education_exp_pc',
                            'Land_management_other_exp_pc',
                            'Police_admin',
                            'School_admin', 
                            'other_education_officials',
                            'civil_engineering_man',
                            "fleet_management",
                            "park_garden_man",
                            "fire_management",
                            'Health_care_workers',
                            'tax_financial_admin', 
                            'all_gemeinde_admin',
                            
                            'tot_employees_building_construction_management',
                            'tot_empl_sewage',
                            'tot_empl_fleet_and_road_cleaning', 
                            'tot_empl_garden_park_management',
                            'tot_empl_fire_dep', 
                            'tot_empl_healthcare', 
                            'tot_empl_welfare_system',
                            'tot_empl_edu_system', 
                            'tot_empl_police_tax_financial', 
                               # 'tot_empl',
                            
                            'Lifetime_Beamte_a',
                            'Part_time_Beamte_a',
                            'scientific_beamte_a',
                            'trainee_beamte_a',
                            'Fireable_Beamte_a',
                            'Total_beamte_a',
                            'angestellte_pension_a',
                            'angestellte_Nopension_a',
                            'tot_empl_a',
                            
                               'Lifetime_Beamte_b',
                            'Part_time_Beamte_b',
                            'scientific_beamte_b',
                            'trainee_beamte_b',
                            'Fireable_Beamte_b',
                            'Total_beamte_b',
                             'angestellte_pension_b',
                            'angestellte_Nopension_b',
                            'tot_empl_b',
                            'General_management',                                    
                            'welfare_empl_nom',   
                            
                            'tot_localdeaths_1year',
                            'local_deaths_1yearp100',
                            'tot_nonlocaldeaths_1year',
                            'nonlocal_deaths_1yearp100',
                            'tot_deaths_local',
                            'tot_deaths_foreign',
                            'tot_births_residents', 
                            'tot_births_nonlocal',
                            "tot_immigrants",
                            "tot_emigrants",
                            "net_migration",
                            "value_added_tax_1000RM",
                            "population1930",
                            "Gemeinde"
                            ] 
    return weimar_dig_process


def nazi_initial_vars():
    nazi_dig_process = [
                         "taxable_income_thousands",
                         "tot_income_tax_thousands",
                         "tot_income_tax_pt",
                         "income_tax_pc",
                         "land_and_building_taxes_nominal", 
                         "business_tax_nominal",
                         "wealth_transfer_tax_nominal",
                         "local_tax_tot_nominal",
                         "local_tax_pc",
                         "land_and_building_tax",
                         "business_tax",
                         "wealth_transfer_tax",
                         'taxable_income_thousands_nazi',
                         'taxable_income_nazi_pt', 
                         'taxable_income_nazi_pc',
                         'income_taxes_collected_thousands_nazi',
                         'income_taxes_collected_nazi_pt', 
                         'income_taxes_collected_pc',
                           
                         'elementary_exp_pc', 
                         'secondary_exp_pc',
                         'gen_man_tax_finance_exp_pc', 
                         'police_exp_pc', 
                         'school_admin_exp_pc',
                         'infrastructure_exp_pc', 
                         'welfare_exp_pc', 
                         'health_exp_pc',
                           
                         'pop_residential_jan_1937',
                         'Beamte37',
                         'tot_empl37',     
                         'tot_immigrants36', 
                         'tot_imm36_p1000', 
                         'tot_emigrants36',
                         'tot_emi36_p1000', 
                         'net_migration36', 
                         'net_migration36p1000',
                         'net_migration35p1000', 
                         'net_migration34p1000', 
                         'moves_within36',
                         'moves_within36p1000',
                         "Gemeinde"
                        ] 
    return nazi_dig_process


def persecution_vars():
    variables_to_keep_persecution_process = [   
                                            "kreis",
                                            "kreis_nr",
                                            "totpop",
                                            "pop33",
                                            "stuer1",
                                            "stuer2",
                                            "stuer3",
                                            "deptotal",
                                            "jews33",
                                            "jews39",
                                            "c25prot",
                                            "n333gs",
                                            "n333nsda",
                                            "n32nnsda",
                                            "n32ngs",
                                            "n285nsda",
                                            "n327gs",
                                            "n327nsda",
                                            "n309gs",
                                            "n309nsda",
                                            "n285gs",
                                            "c25bwerk",
                                            "c33erwtt",
                                            "c33indu",
                                            "c25berwt",
                                            "c25pop",
                                            "c25juden",
                                            "pog20s",
                                            "syn33",
                                            "pog33"
                                        ]
    
    persecution_agg_rules = {
                                            "stuer1": 'mean', 
                                            "stuer2": 'mean', 
                                            "stuer3": 'mean', 
                                            "deptotal": 'sum', 
                                            "jews33": 'sum', 
                                            "c25prot": 'sum',     
                                            "n333gs": 'sum',
                                            "n333nsda": 'sum',
                                            "n32nnsda": 'sum',
                                            "n32ngs": 'sum',
                                            "n285nsda": 'sum',
                                            "n327gs": 'sum',
                                            "n327nsda": 'sum',
                                            "n309gs": 'sum',
                                            "n309nsda": 'sum',
                                            "n285gs": 'sum',
                                            "c25bwerk": 'sum',
                                            "c33erwtt": 'sum',
                                            "c33indu": 'sum',
                                            "c25berwt": 'sum',
                                            "c25pop": 'sum',
                                            "c25juden": 'sum',
                                            "pog20s": 'sum',
                                            "syn33": 'sum',
                                            "pop33": 'sum',
                                            "jews39": 'sum',
                                            "pog33": 'sum', 
                                        }
    return variables_to_keep_persecution_process, persecution_agg_rules


def radio_vars():
    
    variables_to_keep_radio_process = [
                                        "NEAR_DIST",
                                        "dist_berlin",
                                        "exposure_prussia",
                                        "inc_random",
                                        "inc_year",
                                        "lat",
                                        "lon",
                                        "prussia_ind",
                                        "segment_identifier",
                                        "segment_identifier_alt1",
                                        "segment_identifier_alt2",
                                        "map_kreis_merge",
                                        
                                        "map_kreisnr",
                                        "radio_kreis",
                                        "radio_kreis_merge",
                                        "id",
                                        "share_listeners31",
                                        "logtaxprop",
                                        "c33erlos_share_x",
                                        "c33brlos_share_x",
                                        "war_per1000_x",
                                        "c25anges_share_x",
                                        "c25arbei_share_x",
                                        "town_id",
                                        "c25kath_share_x",
                                        "c25juden_share_x",
                                        "pops_x",
                                        "totpop",
                                        "ss32",
                                        "ss33",
                                        "lis_share32",
                                        "lis_share33"
                                        ]
    return variables_to_keep_radio_process


def clean_base_map():

    variables_to_remove = [
                            "Unnamed: 0",
                            "Unnamed: 0_x",
                            "FID",
                            "AREA",
                            "PERIMETER",
                            "LAND",
                            "map_kreis_type",
                            "map_rb",
                            "map_type",
                            "AREA_1",
                            "FID_1",
                            "FID_2",
                            "ID_1",
                            "LAND_1",
                            "NAME_1",
                            "NEAR_FID",
                            "OBJECTID",
                            "ORIG_FID",
                            "PERIMETE_1",
                            "Rb_1",
                            "STATUS_1",
                            "Shape_Area",
                            "Shape_Leng",
                            "Type_1",
                            "dual_color",
                            "holder_id",
                            "inc_reason",
                            "level1_h",
                            "level1_o",
                            "nap_ind",
                            "num",
                            "old_west_ind",
                            "owner_id",
                            "short_name",
                            "supra_id",
                            "west_ind",
                            "west_middle",
                            "year",
                            "Unnamed: 0_y",
                            "_merge",
                            "Unnamed: 0.1",
                            "variants",
                            "map_kreis",
                            "gemeinde_merge",
                            "Gemeinde",
                            "nazi_kreiskey",
                            "nazi_kreis",
                            "nazi_kreis_merge",
                            "radio_kreis",
                            "radio_kreis_merge",
                            "id",
                            "ID",
                            "long_name"
                            ]
    
    main_map_variables = [
                            "NEAR_DIST",  # The following is dropped for N-1 sources
                            "dist_berlin",
                            "exposure_prussia",
                            "inc_random",
                            "inc_year",
                            "lat",
                            "lon",
                            "prussia_ind",
                            "segment_identifier",
                            "segment_identifier_alt1",
                            "segment_identifier_alt2",
                            "map_kreis_merge",
                            ]
    
    return variables_to_remove, main_map_variables


def dig_gemeinde_dict():
        dict_new_names = {
                              "Amberb": "Amberg",
                              "Ausgburg": "Augsburg",
                              "BadKreuzn": "KREUZNACH",
                              "Bielefel":"Bielefeld",
                              "Bielfeld": "Bielefeld",
                              "Bochun":"Bochum",
                              "Botrop":"Bottrop",
                              "Bottrop.": "BOTTROP",
                              "Brandenburh":"Brandenburg",
                              "Brandenburg.H.": "BRANDENBURG",
                              "Bremen":"HANSESTADT BREMEN",
                              "Breslau.": "Breslau",
                              "Cassel": "Kassel",
                              "Castr.-Rauxel":"Castrop-Rauxel",
                              "Chenitz":"Chemnitz",
                              "Cottbbus": "Cottbus",
                              "Crimmitsch": "CRIMMITSCHAU",
                              "Delmenh": "DELMENHORST",
                              "Deeseldorf": "DUSSELDORF",
                              "Duesselldorf":"DUSSELDORF",
                              "Dueren": "Duren",
                              "Duesseldorf.O": "DUSSELDORF",
                              "Duesseldorf": "DUSSELDORF",
                              "Dueseldorf": "DUSSELDORF",
                              "Duisbg.-Hamburg": "DUISBURG-HAMBORN",
                              "Duisbg.-Hamb": "DUISBURG-HAMBORN",
                              "Duisb.-Hamborn": "DUISBURG-HAMBORN",
                              "Duisb.-Hamb.": "DUISBURG-HAMBORN",
                              "Forst/Lausitz": "Forst",
                              "Frankenthal": "FRANKENTHAL (PFALZ)",
                              "Frankfurt/M-":"FRANKFURT/MAIN",
                              "Frankfurt/O":"FRANKFURT/ODER",
                              "Frankfurt/O-":"FRANKFURT/ODER",
                              "Frankfurt/M": "FRANKFURT/MAIN",
                              "Frankfurt_Oder": "FRANKFURT/ODER",
                              "Frankturt/M.": "FRANKFURT/MAIN",
                              "Freiberg":"Freiburg",
                              "Gelsekirchen":"Gelsenkirchen",
                              "Gelsenk--Buer-":"Gelsenkirchen",
                              "Gelsenk.-Buer": "Gelsenkirchen", 
                              "Gelsenkirchen-": "GELSENKIRCHEN",
                              "Gladbech": "GLADBECK",
                              "Galdbeck": "GLADBECK",
                              "Gladb-Rheydt": "GLADBACH-RHEYDT",
                              "Gldb.-Rheydt": "GLADBACH-RHEYDT",
                              "Gruenbg./S.":"GRUNBERG",
                              "Goettingen": "GOTTINGEN",
                              "Gruenberg": "GRUNBERG",
                              "Halberstadt":"HALBERSTADT",
                              "Halberstaedt": "HALBERSTADT",
                              "Halle.S.": "Halle",
                              "Harb-Wilhelmsb-":"HARBUG-WILHELMSBURG",
                              "Harb.-Wilhelmsbg.":"HARBUG-WILHELMSBURG",
                              "Harb.-Wilhelmsbg":"HARBUG-WILHELMSBURG",
                              "Harb.-Wilhlbg.":"HARBUG-WILHELMSBURG",
                              "Harb.-Wilhelmsburg":"HARBUG-WILHELMSBURG",
                              "Harb.-Wilhbg":"HARBUG-WILHELMSBURG",
                              "Hirschbg.i.R.":"Hirschberg",
                              "Harb.Wilhelmsb":"HARBUG-WILHELMSBURG",
                              "Harbg-Wilhelmsbg":"HARBUG-WILHELMSBURG",
                              "Hrbg.-Wilhbg":"HARBUG-WILHELMSBURG",
                              "Harbg.-Wilhbg":"HARBUG-WILHELMSBURG",
                              "Harb.-Wilhelmsb.":"HARBUG-WILHELMSBURG",
                              "Harb.-Wilhelmsb": "HARBUG-WILHELMSBURG",
                              "Harb.-Wilhlb.": "HARBUG-WILHELMSBURG",
                              "Harbg.-Wilhbg.": "HARBUG-WILHELMSBURG",
                              "Harbg.Wilhbg.": "HARBUG-WILHELMSBURG",
                              "Heindelberg": "HEIDELBERG",
                              "Heilbron":"Heilbronn",
                              "Hellbronn": "Heilbronn",
                              "Hildeseim": "Hildeseim",
                              "Hildescheim": "Hildeseim",
                              "Hildesheim":"Hildeseim",
                              "Hindernburg":"Hindenburg",
                              "Insterberg": "Insterburg",
                              "Interburg": "Insterburg",
                              "Iserholn":"Iserlohn",
                              "Kamp-Lintf":"Kamp-Lintfort",
                              "Kaiserlautern": "Kaiserslautern",
                              "Karlshruhe": "Karlsruhe",
                              "Kempten": "KEMPEN-KREFELD",
                              "Koeln": "KOLN",
                              "Koenisberg": "KONIGSBERG",
                              "Koenisgberg": "KONIGSBERG",
                              "Koenigsberg": "KONIGSBERG",
                              "Kref+Uerdg": "KREFELD-UERDING",
                              "Kref-Uerding": "KREFELD-UERDING",
                              "Kref.-Uerdg.": "KREFELD-UERDING",
                              "Kref.-Uerding": "KREFELD-UERDING",
                              "Krefeld": "KREFELD-UERDING",
                              "Kref.-Uerdgb":"KREFELD-UERDING",
                              "Kref.-Uerdg":"KREFELD-UERDING",
                              "Kref.-Uerdingen":"KREFELD-UERDING",
                              "Liegnity": "Liegnitz",
                              "Landsbg./W": "LANDSBERG",
                              "Ludwigshaven": "LUDWIGSHAFEN AM RHEIN",
                              "Ludwigshafen.Rh.": "LUDWIGSHAFEN AM RHEIN",
                              "Ludwigshafen.": "LUDWIGSHAFEN AM RHEIN",
                              "Ludwigshafen": "LUDWIGSHAFEN AM RHEIN",
                              "Luenen": "Lunen",
                              "Lueneburg": "Luneburg",
                              "Luedenscheid": "LUDENSCHEID",
                              "Luedenscheidt": "LUDENSCHEID",
                              "M--Gladbach":"Gladbach-Rheydt",
                              "Gldb.-Rheydtb":"Gladbach-Rheydt",
                              "Magdenburg":"Magdeburg",
                              "Mersburg":"Meersburg",
                              "Merseburg":"Meersburg",
                              "Muelhausen/Th":"Muehlhausen/Th",
                              "Muechen": "Muenchen",
                              "M.Gladbach": "GLADBACH-RHEYDT",
                              "Muenchen-Gladbach": "GLADBACH-RHEYDT",
                              "Muelheim": "MULHEIM", 
                              "Muelheim.d.Ruhr": "MULHEIM",
                              "Muelhausen": "MUHLHAUSEN",
                              "Muehlhausen": "MUHLHAUSEN",
                              "Muehlhausen/Th": "MUHLHAUSEN",
                              "Naumbg.a.S.":"Naumberg",
                              "Naumberg": "Naumburg",
                              "Nuermberg": "Nuernberg",
                              "Oberhause":"OBERHAUSEN",
                              "Oberhausen":"OBERHAUSEN",
                              "Oddenbach":"Offenbach",
                              "Ofenbach":"Offenbach",
                              "Ohlings": "Ohligs",
                              "Pforzeim":"Pforzheim",
                              "Pforzhelm":"Pforzheim",
                              "Postdam":"Potsdam",
                              "Postsdam": "Potsdam",
                              "Quedlimburg": "Quedlinburg",
                              "Reclinghausen": "Recklinghausen",
                              "Recklinghaus":"Recklinghausen",
                              "Recklinghs":"Recklinghausen",
                              "Reichenb./V":"Reichenbach",
                              "Reurlingen": "Reutlingen",
                              "Schneidem":"Schneidemuehl",
                              "Stargrd/P":"Stargard",
                              "Stolp/Pom":"Stolp",
                              "Stolberg": "STOLLBERG",
                              "Straslung":"Stralsund",
                              "stuttgart": "Stuttgart",
                              "Tillsit": "Tilsit",
                              "Trief":"Trier",
                              "trier": "Trier",
                              "Wandsbeck": "Wandsbek",
                              "Wanne-Eiekel":"Wanne-Eickel",
                              "WanneEickel": "Wanne-Eickel",
                              "WanneâEickel":"Wanne-Eickel",
                              "Wernigerod": "WERNIGERODE",
                              "Wesermuende": "WESERMUNDE",
                              "Wilhelmshv":"Wilhelmshaven",
                              "Wuerzberg": "Wuerzburg",
                              "Wuppertalb":"Wuppertal",
                              "Zwichau": "Zwickau",
                              "Duisb.-Hambb":"Duisburg-Hamborn",
                              "Duisburg":"Duisburg-Hamborn",
                              "Rheydt":"Gladbach-Rheydt",
                              "Muchen":"Muenchen",
                              "Hamborn":"Duisburg-Hamborn",
                              "M.-Gladbach":"Gladbach-Rheydt",
                              "Aschaffenbg":"Aschaffenburg",
                              "Braunschw.":"Braunschweig",
                              "Bg.Gladb.":"Gladbach-Rheydt", 
                              "Castop-Rauxel":"Castrop-Rauxel", 
                              "Frankfurt/M.":"FRANKFURT/MAIN",
                              "Frankfurt/O.":"FRANKFURT/ODER",
                              "bElberfelt":"Elberfeld",
                              "bHamborn": "Duisburg-Hamborn",
                              "bSterkrade":"Sterkrade",
                              "Aaschen":"Aachen",
                              "aachen": "Aachen",
                              "B.Godesbg.":"Bad Godesberg",
                              "Hrbg.-Wilhbg.":"HARBUG-WILHELMSBURG",
                              "Wilhelmsburg": "HARBUG-WILHELMSBURG",
                              "Wittenberge": "Wittenberg",
                              "Wurzburg": "WUERZBURG",
                              }
        return dict_new_names